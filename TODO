Version: 0.1
v Core: json command protocol
v Core: bulk requests
v Core: async core
x Networking: identity support [dropped in favor of explicit tokens]
v Plugins: http plugin

Version: 0.2
v Networking: authentication
v Storage: local persistence

Version: 0.3
x Core: move action into targets [was a bad idea]
v Core: migrate internal variable state to a dedicated configuration object, 
  more flexible environment setup: paths, minimal protocol version, etc.
v Core: history
v Core: basic statistics
v Engine: modular engines, multiple driver types
v Engine: isolated tasks
v Engine: task queues
v Engine: 0mq event based driver
v JS: basic version
v Python: Tail, Executer
v Python: authentication support
v Python: aliases
v Storage: filesystem event based driver
v Storage: per-plugin per-thread storage support

Version: 0.4
v Core: export the hostname
v Packaging: drop priveleges
v Packaging: proper development files placement
v Storage: global persistence

Version: 0.5
v Cocained!
v Core: more statistics (from engines and drivers)
v Core: JSON -> Msgpack for internal communications
v Core: stable plugin interface
v Engine: forks!
v Engine: per-engine export sockets
v Engine: an ability to kill timed out slaves
v Engine: dynamic slave pools
x Storage: proper inter-process locking in file storage [dropped storage support in apps]

Version: 0.6
v Engine: HTTP driver
v Engine: LSD driver

Version: 0.7
* Core: threaded engines
* Core: asynchronous services in the context
* JS: adapt portions of node.js or some other CommonJS implementation or embed it
  or something else to make it work
* Networking: authentication replay protection (timestamps)
* Networking: encrypted responses
* Networking: encrypted publishing
* Dealer: working persistance based on eblob backend
* Dealer: properly handling timed out messages
* Dealer: asynchronous interface
* Dealer: python binding
